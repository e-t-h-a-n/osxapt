diff -rU 5 a/apt-1.0.9.8.3/Makefile b/apt-1.0.9.8.3/Makefile
--- a/apt-1.0.9.8.3/Makefile	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/Makefile	2016-06-05 15:16:42.000000000 +0100
@@ -9,21 +9,22 @@
 .PHONY: default
 default: startup all
 
 .PHONY: headers library clean veryclean all binary program doc test update-po
 all headers library clean veryclean binary program doc manpages docbook test update-po startup dirs:
+	$(MAKE) -C darwin $@
 	$(MAKE) -C vendor $@
 	$(MAKE) -C apt-pkg $@
 	$(MAKE) -C apt-inst $@
 	$(MAKE) -C apt-private $@
 	$(MAKE) -C methods $@
 	$(MAKE) -C cmdline $@
 	$(MAKE) -C ftparchive $@
 	$(MAKE) -C dselect $@
-	$(MAKE) -C doc $@
+	#$(MAKE) -C doc $@
 	$(MAKE) -C po $@
-	$(MAKE) -C test $@
+	#$(MAKE) -C test $@
 
 all headers library clean veryclean binary program doc manpages docbook test update-po: startup dirs
 
 dirs: startup
 
diff -rU 5 a/apt-1.0.9.8.3/apt-inst/makefile b/apt-1.0.9.8.3/apt-inst/makefile
--- a/apt-1.0.9.8.3/apt-inst/makefile	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/apt-inst/makefile	2016-06-05 18:09:56.000000000 +0100
@@ -16,11 +16,15 @@
 LIBRARY=apt-inst
 MAJOR=1.5
 MINOR=0
 SLIBS=$(PTHREADLIB) -lapt-pkg
 APT_DOMAIN:=libapt-inst$(MAJOR)
+ifeq ($(shell uname),Darwin)
+LIBRARYDEPENDS=$(LIB)/libapt-pkg.dylib
+else
 LIBRARYDEPENDS=$(LIB)/libapt-pkg.so
+endif
 
 SOURCE = $(wildcard *.cc */*.cc)
 HEADERS = $(addprefix apt-pkg/,$(notdir $(wildcard *.h */*.h)))
 
 include $(LIBRARY_H)
diff -rU 5 a/apt-1.0.9.8.3/apt-pkg/aptconfiguration.cc b/apt-1.0.9.8.3/apt-pkg/aptconfiguration.cc
--- a/apt-1.0.9.8.3/apt-pkg/aptconfiguration.cc	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/apt-pkg/aptconfiguration.cc	2016-06-05 15:16:42.000000000 +0100
@@ -191,11 +191,11 @@
 	}
 
 	// get the environment language codes: LC_MESSAGES (and later LANGUAGE)
 	// we extract both, a long and a short code and then we will
 	// check if we actually need both (rare) or if the short is enough
-	string const envMsg = string(Locale == 0 ? std::setlocale(LC_MESSAGES, NULL) : *Locale);
+	string const envMsg = string(Locale == 0 ? setlocale(LC_MESSAGES, NULL) : *Locale);
 	size_t const lenShort = (envMsg.find('_') != string::npos) ? envMsg.find('_') : 2;
 	size_t const lenLong = (envMsg.find_first_of(".@") != string::npos) ? envMsg.find_first_of(".@") : (lenShort + 3);
 
 	string const envLong = envMsg.substr(0,lenLong);
 	string const envShort = envLong.substr(0,lenShort);
diff -rU 5 a/apt-1.0.9.8.3/apt-pkg/contrib/cmndline.cc b/apt-1.0.9.8.3/apt-pkg/contrib/cmndline.cc
--- a/apt-1.0.9.8.3/apt-pkg/contrib/cmndline.cc	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/apt-pkg/contrib/cmndline.cc	2016-06-05 15:16:42.000000000 +0100
@@ -21,10 +21,14 @@
 #include <stddef.h>
 #include <stdlib.h>
 #include <string.h>
 #include <string>
 
+#ifdef __APPLE__
+  #include "darwin/strchrnul.h"
+#endif // __APPLE__
+
 #include <apti18n.h>
 									/*}}}*/
 using namespace std;
 
 // CommandLine::CommandLine - Constructor				/*{{{*/
diff -rU 5 a/apt-1.0.9.8.3/apt-pkg/contrib/fileutl.cc b/apt-1.0.9.8.3/apt-pkg/contrib/fileutl.cc
--- a/apt-1.0.9.8.3/apt-pkg/contrib/fileutl.cc	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/apt-pkg/contrib/fileutl.cc	2016-06-05 15:16:42.000000000 +0100
@@ -58,11 +58,18 @@
 	#include <bzlib.h>
 #endif
 #ifdef HAVE_LZMA
 	#include <lzma.h>
 #endif
+
+#ifdef __APPLE__ // OS X uses <machine/endian.h> not <endian.h>.
+  #include <machine/endian.h>
+	#include <libkern/OSByteOrder.h>
+#else
 #include <endian.h>
+#endif // __APPLE__
+
 #include <stdint.h>
 
 #include <apti18n.h>
 									/*}}}*/
 
@@ -1883,11 +1890,15 @@
        if (read(iFd, &size, 4) != 4)
        {
 	  FileFdErrno("read","Unable to read original size of gzipped file");
 	  return 0;
        }
+			 #ifdef __APPLE__
+			 	size = OSSwapLittleToHostInt32(size); // OS X uses different endian conversion functions.
+			 #else
        size = le32toh(size);
+			 #endif // __APPLE__
 
        if (lseek(iFd, oldPos, SEEK_SET) < 0)
        {
 	  FileFdErrno("lseek","Unable to seek in gzipped file");
 	  return 0;
diff -rU 5 a/apt-1.0.9.8.3/apt-pkg/contrib/sha2_internal.cc b/apt-1.0.9.8.3/apt-pkg/contrib/sha2_internal.cc
--- a/apt-1.0.9.8.3/apt-pkg/contrib/sha2_internal.cc	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/apt-pkg/contrib/sha2_internal.cc	2016-06-05 15:16:42.000000000 +0100
@@ -31,11 +31,16 @@
  *
  * $Id: sha2.c,v 1.1 2001/11/08 00:01:51 adg Exp adg $
  */
 #include <config.h>
 
+#ifdef __APPLE__
+	#include <machine/endian.h>
+#else
 #include <endian.h>
+#endif // __APPLE__
+
 #include <string.h>	/* memcpy()/memset() or bcopy()/bzero() */
 #include <assert.h>	/* assert() */
 #include "sha2_internal.h"
 
 /*
@@ -1076,6 +1081,5 @@
 
 	SHA384_Init(&context);
 	SHA384_Update(&context, data, len);
 	return SHA384_End(&context, digest);
 }
-
diff -rU 5 a/apt-1.0.9.8.3/apt-pkg/deb/debsrcrecords.cc b/apt-1.0.9.8.3/apt-pkg/deb/debsrcrecords.cc
--- a/apt-1.0.9.8.3/apt-pkg/deb/debsrcrecords.cc	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/apt-pkg/deb/debsrcrecords.cc	2016-06-05 15:16:42.000000000 +0100
@@ -17,10 +17,14 @@
 #include <apt-pkg/strutl.h>
 #include <apt-pkg/aptconfiguration.h>
 #include <apt-pkg/srcrecords.h>
 #include <apt-pkg/tagfile.h>
 
+#ifdef __APPLE__
+  #include "darwin/strchrnul.h"
+#endif // __APPLE__
+
 #include <ctype.h>
 #include <stdlib.h>
 #include <string.h>
 #include <algorithm>
 #include <string>
diff -rU 5 a/apt-1.0.9.8.3/apt-pkg/deb/debversion.cc b/apt-1.0.9.8.3/apt-pkg/deb/debversion.cc
--- a/apt-1.0.9.8.3/apt-pkg/deb/debversion.cc	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/apt-pkg/deb/debversion.cc	2016-06-05 15:16:42.000000000 +0100
@@ -13,10 +13,14 @@
 #include <config.h>
 
 #include <apt-pkg/debversion.h>
 #include <apt-pkg/pkgcache.h>
 
+#ifdef __APPLE__
+  #include "darwin/memrchr.h"
+#endif // __APPLE__
+
 #include <string.h>
 #include <string>
 #include <stdlib.h>
 #include <ctype.h>
 									/*}}}*/
diff -rU 5 a/apt-1.0.9.8.3/apt-pkg/deb/dpkgpm.cc b/apt-1.0.9.8.3/apt-pkg/deb/dpkgpm.cc
--- a/apt-1.0.9.8.3/apt-pkg/deb/dpkgpm.cc	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/apt-pkg/deb/dpkgpm.cc	2016-06-05 16:53:28.000000000 +0100
@@ -25,11 +25,10 @@
 #include <apt-pkg/pkgcache.h>
 
 #include <errno.h>
 #include <fcntl.h>
 #include <grp.h>
-#include <pty.h>
 #include <pwd.h>
 #include <signal.h>
 #include <stddef.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -48,20 +47,32 @@
 #include <set>
 #include <string>
 #include <utility>
 #include <vector>
 
+#ifdef __APPLE__ // OS X stores some functions from <pty.h> under <util.h>.
+  #include <util.h>
+  #include <crt_externs.h> // And while we're sorting out <pty.h> and <util.h>, include <crt_externs.h> for _NSGetEnviron().
+  #include "darwin/memrchr.h"
+#else
+  #include <pty.h>
+#endif // __APPLE__
+
 #include <apti18n.h>
 									/*}}}*/
 
 using namespace std;
 
 APT_PURE static unsigned int
 EnvironmentSize()
 {
   unsigned int size = 0;
+  #ifdef __APPLE__
+    char **envp = (char**) _NSGetEnviron(); // We don't have `environ' on OS X so we need to use and cast _NSGetEnviron().
+  #else
   char **envp = environ;
+  #endif // __APPLE__
 
   while (*envp != NULL)
     size += strlen (*envp++) + 1;
 
   return size;
@@ -421,11 +432,15 @@
    Configuration::Item const *Opts = _config->Tree(Cnf);
    if (Opts == 0 || Opts->Child == 0)
       return true;
    Opts = Opts->Child;
 
-   sighandler_t old_sigpipe = signal(SIGPIPE, SIG_IGN);
+   #ifdef __APPLE__
+     sig_t old_sigpipe = signal(SIGPIPE, SIG_IGN);
+   #else
+     sighandler_t old_sigpipe = signal(SIGPIPE, SIG_IGN);
+   #endif // __APPLE__
    
    unsigned int Count = 1;
    for (; Opts != 0; Opts = Opts->Next, Count++)
    {
       if (Opts->Value.empty() == true)
@@ -1507,20 +1522,29 @@
 
       /* Mask off sig int/quit. We do this because dpkg also does when 
          it forks scripts. What happens is that when you hit ctrl-c it sends
 	 it to all processes in the group. Since dpkg ignores the signal 
 	 it doesn't die but we do! So we must also ignore it */
-      sighandler_t old_SIGQUIT = signal(SIGQUIT,SIG_IGN);
-      sighandler_t old_SIGINT = signal(SIGINT,SigINT);
+      #ifdef __APPLE__
+        sig_t old_SIGQUIT = signal(SIGQUIT,SIG_IGN);
+        sig_t old_SIGINT = signal(SIGINT,SigINT);
+      #else
+        sighandler_t old_SIGQUIT = signal(SIGQUIT,SIG_IGN);
+        sighandler_t old_SIGINT = signal(SIGINT,SigINT);
+      #endif // __APPLE__
       
       // Check here for any SIGINT
       if (pkgPackageManager::SigINTStop && (Op == Item::Remove || Op == Item::Purge || Op == Item::Install)) 
          break;
       
       
       // ignore SIGHUP as well (debian #463030)
-      sighandler_t old_SIGHUP = signal(SIGHUP,SIG_IGN);
+      #ifdef __APPLE__
+        sig_t old_SIGHUP = signal(SIGHUP,SIG_IGN);
+      #else
+        sighandler_t old_SIGHUP = signal(SIGHUP,SIG_IGN);
+      #endif // __APPLE__
 
       // now run dpkg
       d->progress->StartDpkg();
       std::set<int> KeepFDs;
       KeepFDs.insert(fd[1]);
diff -rU 5 a/apt-1.0.9.8.3/apt-pkg/install-progress.h b/apt-1.0.9.8.3/apt-pkg/install-progress.h
--- a/apt-1.0.9.8.3/apt-pkg/install-progress.h	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/apt-pkg/install-progress.h	2016-06-05 15:16:42.000000000 +0100
@@ -132,11 +132,15 @@
        int rows;
        int columns;
     } TermSize;
     TermSize GetTerminalSize();
 
+    #ifdef __APPLE__
+    sig_t old_SIGWINCH;
+    #else
     sighandler_t old_SIGWINCH;
+    #endif // __APPLE__
     int child_pty;
 
  public:
     PackageManagerFancy();
     ~PackageManagerFancy();
diff -rU 5 a/apt-1.0.9.8.3/apt-pkg/makefile b/apt-1.0.9.8.3/apt-pkg/makefile
--- a/apt-1.0.9.8.3/apt-pkg/makefile	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/apt-pkg/makefile	2016-06-05 15:16:42.000000000 +0100
@@ -24,10 +24,17 @@
 endif
 ifeq ($(HAVE_LZMA),yes)
 SLIBS+= -llzma
 endif
 APT_DOMAIN:=libapt-pkg$(LIBAPTPKG_MAJOR)
+#ifeq ($(shell uname), Darwin)
+#SLIBS+= -L$(BASE)/darwin -ldarwinmissing.a
+#endif
 
 SOURCE = $(wildcard *.cc */*.cc)
 HEADERS = $(addprefix apt-pkg/,$(notdir $(wildcard *.h */*.h)))
 
+ifeq ($(shell uname), Darwin)
+SOURCE+= $(BASE)/darwin/strchrnul.cc $(BASE)/darwin/memrchr.cc
+endif
+
 include $(LIBRARY_H)
diff -rU 5 a/apt-1.0.9.8.3/apt-pkg/srcrecords.cc b/apt-1.0.9.8.3/apt-pkg/srcrecords.cc
--- a/apt-1.0.9.8.3/apt-pkg/srcrecords.cc	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/apt-pkg/srcrecords.cc	2016-06-05 15:16:42.000000000 +0100
@@ -29,11 +29,11 @@
 									/*}}}*/
 
 // SrcRecords::pkgSrcRecords - Constructor				/*{{{*/
 // ---------------------------------------------------------------------
 /* Open all the source index files */
-pkgSrcRecords::pkgSrcRecords(pkgSourceList &List) : d(NULL), Files(0), Current(0)
+pkgSrcRecords::pkgSrcRecords(pkgSourceList &List) : d(NULL), Files(0), Current()
 {
    for (pkgSourceList::const_iterator I = List.begin(); I != List.end(); ++I)
    {
       std::vector<pkgIndexFile *> *Indexes = (*I)->GetIndexFiles();
       for (std::vector<pkgIndexFile *>::const_iterator J = Indexes->begin();
diff -rU 5 a/apt-1.0.9.8.3/apt-private/private-install.cc b/apt-1.0.9.8.3/apt-private/private-install.cc
--- a/apt-1.0.9.8.3/apt-private/private-install.cc	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/apt-private/private-install.cc	2016-06-05 15:16:42.000000000 +0100
@@ -22,11 +22,16 @@
 #include <apt-pkg/upgrade.h>
 
 #include <errno.h>
 #include <stdlib.h>
 #include <string.h>
+#ifdef __APPLE__
+  #include <sys/param.h>
+  #include <sys/mount.h>
+#else
 #include <sys/statfs.h>
+#endif // __APPLE__
 #include <sys/statvfs.h>
 #include <algorithm>
 #include <iostream>
 #include <set>
 #include <vector>
diff -rU 5 a/apt-1.0.9.8.3/buildlib/defaults.mak b/apt-1.0.9.8.3/buildlib/defaults.mak
--- a/apt-1.0.9.8.3/buildlib/defaults.mak	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/buildlib/defaults.mak	2016-06-05 15:22:19.000000000 +0100
@@ -106,11 +106,11 @@
 # will be published to.
 # This should be declared before including this file
 HEADER_TARGETDIRS+=
 
 # Options
-CPPFLAGS+= -I$(INCLUDE)
+CPPFLAGS+= -I$(INCLUDE) -I$(SRCDIR)/include -I$(SRCDIR)
 LDFLAGS+= -L$(LIB)
 
 # Directors to create
 MKDIRS := $(BIN) 
 
diff -rU 5 a/apt-1.0.9.8.3/buildlib/environment.mak.in b/apt-1.0.9.8.3/buildlib/environment.mak.in
--- a/apt-1.0.9.8.3/buildlib/environment.mak.in	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/buildlib/environment.mak.in	2016-06-05 18:10:20.000000000 +0100
@@ -8,20 +8,22 @@
 # C++ compiler options
 CC = @CC@
 CPPFLAGS+= @CPPFLAGS@ @DEFS@ -D_REENTRANT -D_FORTIFY_SOURCE=2
 CXX = @CXX@
 CXXFLAGS+= @CXXFLAGS@ -Wall -Wextra
-CXXFLAGS+= -Wcast-align -Wlogical-op -Wredundant-decls -Wmissing-declarations -Wunsafe-loop-optimizations
-CXXFLAGS+= -Wsuggest-attribute=pure -Wsuggest-attribute=const -Wsuggest-attribute=noreturn
+# bad for OS X
+#CXXFLAGS+= -Wcast-align -Wlogical-op -Wredundant-decls -Wmissing-declarations -Wunsafe-loop-optimizations
+#CXXFLAGS+= -Wsuggest-attribute=pure -Wsuggest-attribute=const -Wsuggest-attribute=noreturn
+#####
 # a bit too pedantic to be run by default
 #CXXFLAGS+= -Wpedantic -Wno-long-long -Wno-vla -Wno-variadic-macros
 NUM_PROCS = @NUM_PROCS@
 
 # Linker stuff
 PICFLAGS+= -fPIC -DPIC
 LFLAGS+= @LDFLAGS@
-LEFLAGS+= 
+LEFLAGS+=
 SOCKETLIBS:= @SOCKETLIBS@
 AR:=@AR@
 RANLIB:=@RANLIB@
 
 # Dep generation - this only works for gnu stuff
@@ -66,12 +68,20 @@
 HAVE_LZMA = @HAVE_LZMA@
 NEED_SOCKLEN_T_DEFINE = @NEED_SOCKLEN_T_DEFINE@
 
 # Shared library things
 HOST_OS = @host_os@
-ifneq ($(words $(filter gnu% linux-gnu% kfreebsd-gnu% %-gnu,$(HOST_OS))),0)
+ifneq ($(words $(filter gnu% linux-gnu% kfreebsd-gnu% %-gnu %darwin%,$(HOST_OS))),0)
    SONAME_MAGIC=-Wl,-soname -Wl,
    LFLAGS_SO=
 else
    # Do not know how to create shared libraries here.
    ONLYSTATICLIBS = yes
 endif
+ifeq ($(shell uname),Darwin)
+	 SONAME_MAGIC=
+	 LDFLAGS_SO=
+	 ONLYSTATICLIBS=
+endif
+
+
+SRCDIR = @abs_srcdir@
diff -rU 5 a/apt-1.0.9.8.3/buildlib/library.mak b/apt-1.0.9.8.3/buildlib/library.mak
--- a/apt-1.0.9.8.3/buildlib/library.mak	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/buildlib/library.mak	2016-06-05 18:10:36.000000000 +0100
@@ -14,24 +14,36 @@
 # signify the PIC output.
 
 # See defaults.mak for information about LOCAL
 
 # Some local definitions
+ifeq ($(shell uname),Darwin)
+LOCAL := lib$(LIBRARY).$(MAJOR).$(MINOR).dylib
+else
 LOCAL := lib$(LIBRARY).so.$(MAJOR).$(MINOR)
+endif
 $(LOCAL)-OBJS := $(addprefix $(OBJ)/,$(addsuffix .opic,$(notdir $(basename $(SOURCE)))))
 $(LOCAL)-DEP := $(addprefix $(DEP)/,$(addsuffix .opic.d,$(notdir $(basename $(SOURCE)))))
 $(LOCAL)-HEADERS := $(addprefix $(INCLUDE)/,$(HEADERS))
+ifeq ($(shell uname),Darwin)
+$(LOCAL)-SONAME := lib$(LIBRARY).$(MAJOR).dylib
+else
 $(LOCAL)-SONAME := lib$(LIBRARY).so.$(MAJOR)
+endif
 $(LOCAL)-SLIBS := $(SLIBS)
 $(LOCAL)-LIBRARY := $(LIBRARY)
 
 TYPE = src
 include $(PODOMAIN_H)
 
 # Install the command hooks
 headers: $($(LOCAL)-HEADERS)
+ifeq ($(shell uname),Darwin)
+library: $(LIB)/lib$(LIBRARY).dylib $(LIB)/lib$(LIBRARY).$(MAJOR).dylib
+else
 library: $(LIB)/lib$(LIBRARY).so $(LIB)/lib$(LIBRARY).so.$(MAJOR)
+endif
 clean: clean/$(LOCAL)
 veryclean: veryclean/$(LOCAL)
 
 # Make Directories
 MKDIRS += $(OBJ) $(DEP) $(LIB) $(dir $($(LOCAL)-HEADERS))
@@ -39,27 +51,51 @@
 # The clean rules
 .PHONY: clean/$(LOCAL) veryclean/$(LOCAL)
 clean/$(LOCAL):
 	-rm -f $($(@F)-OBJS) $($(@F)-DEP)
 veryclean/$(LOCAL): clean/$(LOCAL)
+	ifeq ($(shell uname),Darwin)
+	-rm -f $($(@F)-HEADERS) $(LIB)/lib$($(@F)-LIBRARY)*.dylib*
+	else
 	-rm -f $($(@F)-HEADERS) $(LIB)/lib$($(@F)-LIBRARY)*.so*
+	endif
 
 # Build rules for the two symlinks
+ifeq ($(shell uname),Darwin)
+.PHONY: $(LIB)/lib$(LIBRARY).$(MAJOR).dylib $(LIB)/lib$(LIBRARY).dylib
+$(LIB)/lib$(LIBRARY).$(MAJOR).dylib: $(LIB)/lib$(LIBRARY).$(MAJOR).$(MINOR).dylib
+	ln -sf $(<F) $@
+$(LIB)/lib$(LIBRARY).dylib: $(LIB)/lib$(LIBRARY).$(MAJOR).$(MINOR).dylib
+	ln -sf $(<F) $@
+else
 .PHONY: $(LIB)/lib$(LIBRARY).so.$(MAJOR) $(LIB)/lib$(LIBRARY).so
 $(LIB)/lib$(LIBRARY).so.$(MAJOR): $(LIB)/lib$(LIBRARY).so.$(MAJOR).$(MINOR)
 	ln -sf $(<F) $@
 $(LIB)/lib$(LIBRARY).so: $(LIB)/lib$(LIBRARY).so.$(MAJOR).$(MINOR)
 	ln -sf $(<F) $@
+endif
 
 # The binary build rule
+ifeq ($(shell uname),Darwin)
+$(LIB)/lib$(LIBRARY).$(MAJOR).$(MINOR).dylib: $($(LOCAL)-HEADERS) $($(LOCAL)-OBJS) $(LIBRARYDEPENDS)
+	-rm -f $(LIB)/lib$($(@F)-LIBRARY)*.dylib* 2> /dev/null
+	echo Building shared library $@
+	$(CXX) $(CXXFLAGS) $(LDFLAGS) $(PICFLAGS) $(LFLAGS) $(LFLAGS_SO)\
+	   -o $@ -shared \
+	   $(filter %.opic,$^) \
+	   $($(@F)-SLIBS)
+
+else
 $(LIB)/lib$(LIBRARY).so.$(MAJOR).$(MINOR): $($(LOCAL)-HEADERS) $($(LOCAL)-OBJS) $(LIBRARYDEPENDS)
 	-rm -f $(LIB)/lib$($(@F)-LIBRARY)*.so* 2> /dev/null
 	echo Building shared library $@
 	$(CXX) $(CXXFLAGS) $(LDFLAGS) $(PICFLAGS) $(LFLAGS) $(LFLAGS_SO)\
 	   -o $@ $(SONAME_MAGIC)$($(@F)-SONAME) -shared \
 	   $(filter %.opic,$^) \
-	   $($(@F)-SLIBS) 
+	   $($(@F)-SLIBS)
+
+endif
 
 # Compilation rules
 vpath %.cc $(SUBDIRS)
 $(OBJ)/%.opic: %.cc $(LIBRARYDEPENDS)
 	echo Compiling $< to $@
diff -rU 5 a/apt-1.0.9.8.3/cmdline/apt-get.cc b/apt-1.0.9.8.3/cmdline/apt-get.cc
--- a/apt-1.0.9.8.3/cmdline/apt-get.cc	2016-03-12 13:14:29.000000000 +0000
+++ b/apt-1.0.9.8.3/cmdline/apt-get.cc	2016-06-05 15:16:42.000000000 +0100
@@ -76,11 +76,16 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
 #include <sys/ioctl.h>
 #include <sys/stat.h>
+#ifdef __APPLE__
+  #include <sys/param.h>
+  #include <sys/mount.h>
+#else
 #include <sys/statfs.h>
+#endif // __APPLE__
 #include <sys/statvfs.h>
 #include <sys/wait.h>
 #include <unistd.h>
 #include <algorithm>
 #include <fstream>
Only in b/apt-1.0.9.8.3: darwin
